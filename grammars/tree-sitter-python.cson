name: 'Python'
scopeName: 'source.python'
type: 'tree-sitter'
parser: 'tree-sitter-python'

firstLineRegex: [
  # shebang line
  '^#![ \\t]*/.*\\bpython[\\d\\.]*\\b'

  # vim modeline
  'vim\\b.*\\bset\\b.*\\b(filetype|ft|syntax)=python'
]

fileTypes: [
  'py'
  'pyi'
  'pyw'
  'gyp'
  'gypi'
  'SConstruct'
  'Sconstruct'
  'sconstruct'
  'SConscript'
  'wsgi'
]

folds: [
  {
    type: ['if_statement']
    start: {type: ':'}
    end: {type: ['elif_clause', 'else_clause']}
  },
  {
    type: [
      'if_statement'
      'elif_clause'
      'else_clause'
      'for_statement'
      'try_statement'
      'with_statement'
      'while_statement'
      'class_definition'
      'function_definition'
      'async_function_definition'
    ]
    start: {type: ':'}
  },
  {
    start: {type: '(', index: 0}
    end: {type: ')', index: -1}
  },
  {
    start: {type: '[', index: 0}
    end: {type: ']', index: -1}
  },
  {
    start: {type: '{', index: 0}
    end: {type: '}', index: -1}
  }
]

comments:
  start: '# '

scopes:
  'module': 'source.python'

  # Keyword
  '"if"': 'keyword.control.condition'
  '"else"': 'keyword.control.condition'
  '"elif"': 'keyword.control.condition'
  '"while"': 'keyword.control.loop'
  '"for"': 'keyword.control.loop'
  '"return"': 'keyword.control.jump'
  '"break"': 'keyword.control.jump'
  '"continue"': 'keyword.control.jump'
  '"pass"': 'keyword.control.jump'
  '"yield"': 'keyword.control.jump'
  '"raise"': 'keyword.control.jump'
  '"await"': 'keyword.control.jump'
  '"try"': 'keyword.control.exception'
  '"except"': 'keyword.control.exception'
  '"finally"': 'keyword.control.exception'
  '"import"': 'keyword.control.package'
  '"from"': 'keyword.control.package'
  '"with"': 'keyword.control.evaluate'
  '"as"': 'keyword.control.evaluate'
  '"assert"': 'keyword.control.evaluate'

  '"print"': 'keyword.control.print'
  '"exec"': 'keyword.control.exec'

  '"+"': 'keyword.operator.arithmetic.symbolic'
  '"-"': 'keyword.operator.arithmetic.symbolic'
  '"*"': 'keyword.operator.arithmetic.symbolic'
  '"/"': 'keyword.operator.arithmetic.symbolic'
  '"%"': 'keyword.operator.arithmetic.symbolic'
  '"**"': 'keyword.operator.arithmetic.symbolic'
  '"//"': 'keyword.operator.arithmetic.symbolic'
  '"@"': 'keyword.operator.arithmetic.symbolic'

  '"&"': 'keyword.operator.bitwise.symbolic'
  '"|"': 'keyword.operator.bitwise.symbolic'
  '"^"': 'keyword.operator.bitwise.symbolic'
  '"~"': 'keyword.operator.bitwise.symbolic'
  '"<<"': 'keyword.operator.bitwise.shift.symbolic'
  '">>"': 'keyword.operator.bitwise.shift.symbolic'

  '"="': 'keyword.operator.assignment.symbolic'
  '":="': 'keyword.operator.assignment.symbolic'
  '"+="': 'keyword.operator.assignment.compound.symbolic'
  '"-="': 'keyword.operator.assignment.compound.symbolic'
  '"*="': 'keyword.operator.assignment.compound.symbolic'
  '"/="': 'keyword.operator.assignment.compound.symbolic'
  '"%="': 'keyword.operator.assignment.compound.symbolic'
  '"**="': 'keyword.operator.assignment.compound.symbolic'
  '"//="': 'keyword.operator.assignment.compound.symbolic'
  '"@="': 'keyword.operator.assignment.compound.symbolic'
  '"&="': 'keyword.operator.assignment.compound.symbolic'
  '"|="': 'keyword.operator.assignment.compound.symbolic'
  '"^="': 'keyword.operator.assignment.compound.symbolic'
  '"<<="': 'keyword.operator.assignment.compound.symbolic'
  '">>="': 'keyword.operator.assignment.compound.symbolic'

  '"=="': 'keyword.operator.comparison.symbolic'
  '"!="': 'keyword.operator.comparison.symbolic'
  '"<>"': 'keyword.operator.comparison.symbolic'
  '"<"': 'keyword.operator.comparison.symbolic'
  '">"': 'keyword.operator.comparison.symbolic'
  '"<="': 'keyword.operator.comparison.symbolic'
  '">="': 'keyword.operator.comparison.symbolic'

  '"in"': 'keyword.operator.comparison'
  '"is"': 'keyword.operator.comparison'
  '"and"': 'keyword.operator.logical'
  '"or"': 'keyword.operator.logical'
  '"not"': 'keyword.operator.logical'
  '"del"': 'keyword.operator.delete'

  '"global"': 'keyword.storage.modifier.global'
  '"nonlocal"': 'keyword.storage.modifier.nonlocal'
  '"async"': 'keyword.storage.modifier.async'

  '"def"': 'keyword.storage.declaration'
  '"lambda"': 'keyword.storage.declaration'
  '"class"': 'keyword.storage.declaration'

  # Entity
  '''
  type > identifier,
  type > subscript > identifier
  ''': [
    {
      match: '^(bool|bytearray|bytes|complex|dict|float|frozenset|int|list|memoryview|object|range|set|str|tuple)$',
      scopes: 'entity.type.fundamental.support'
    },
    'entity.type'
  ]

  '''
  identifier,
  attribute > identifier:nth-child(0),
  class_definition > argument_list > identifier,
  class_definition > argument_list > keyword_argument > identifier:nth-child(2)
  ''': [
    {
      exact: 'cls',
      scopes: 'entity.variable.support.cls'
    },
    {
      exact: 'self',
      scopes: 'entity.variable.support.self'
    }
  ]

  '''
  parameters > identifier,
  parameters > list_splat > identifier,
  parameters > dictionary_splat > identifier,
  typed_parameter > identifier,
  lambda_parameters > identifier,
  default_parameter > identifier:nth-child(0),
  keyword_argument > identifier:nth-child(0)
  ''': [
    {
      exact: 'cls',
      scopes: 'entity.variable.support.parameter.cls'
    },
    {
      exact: 'self',
      scopes: 'entity.variable.support.parameter.self'
    },
    'entity.variable.parameter'
  ]

  'identifier': [
    {
      match: '^(BaseException|Exception|TypeError|StopAsyncIteration|StopIteration|ImportError|ModuleNotFoundError|OSError|ConnectionError|BrokenPipeError|ConnectionAbortedError|ConnectionRefusedError|ConnectionResetError|BlockingIOError|ChildProcessError|FileExistsError|FileNotFoundError|IsADirectoryError|NotADirectoryError|InterruptedError|PermissionError|ProcessLookupError|TimeoutError|EOFError|RuntimeError|RecursionError|NotImplementedError|NameError|UnboundLocalError|AttributeError|SyntaxError|IndentationError|TabError|LookupError|IndexError|KeyError|ValueError|UnicodeError|UnicodeEncodeError|UnicodeDecodeError|UnicodeTranslateError|AssertionError|ArithmeticError|FloatingPointError|OverflowError|ZeroDivisionError|SystemError|ReferenceError|BufferError|MemoryError|Warning|UserWarning|DeprecationWarning|PendingDeprecationWarning|SyntaxWarning|RuntimeWarning|FutureWarning|ImportWarning|UnicodeWarning|BytesWarning|ResourceWarning|GeneratorExit|SystemExit|KeyboardInterrupt)$',
      scopes: 'entity.type.class.exception.support'
    },
    {
      match: '^(bool|bytearray|bytes|complex|dict|float|frozenset|int|list|memoryview|object|range|set|str|tuple)$',
      scopes: 'entity.type.fundamental.support'
    },
    {
      match: '^[0-9_]*[A-Z][A-Z0-9_]*$',
      scopes: 'entity.variable.immutable'
    },
    {
      match: '^[0-9_]*[A-Z]',
      scopes: 'entity.type.class'
    },
    'entity.variable'
  ]

  'function_definition > identifier': 'entity.function.definition'

  'class_definition > identifier': 'entity.type.class.definition'

  '''
  class_definition > argument_list > identifier,
  class_definition > argument_list > keyword_argument > identifier:nth-child(2)
  ''': [
    {
      match: '^(BaseException|Exception|TypeError|StopAsyncIteration|StopIteration|ImportError|ModuleNotFoundError|OSError|ConnectionError|BrokenPipeError|ConnectionAbortedError|ConnectionRefusedError|ConnectionResetError|BlockingIOError|ChildProcessError|FileExistsError|FileNotFoundError|IsADirectoryError|NotADirectoryError|InterruptedError|PermissionError|ProcessLookupError|TimeoutError|EOFError|RuntimeError|RecursionError|NotImplementedError|NameError|UnboundLocalError|AttributeError|SyntaxError|IndentationError|TabError|LookupError|IndexError|KeyError|ValueError|UnicodeError|UnicodeEncodeError|UnicodeDecodeError|UnicodeTranslateError|AssertionError|ArithmeticError|FloatingPointError|OverflowError|ZeroDivisionError|SystemError|ReferenceError|BufferError|MemoryError|Warning|UserWarning|DeprecationWarning|PendingDeprecationWarning|SyntaxWarning|RuntimeWarning|FutureWarning|ImportWarning|UnicodeWarning|BytesWarning|ResourceWarning|GeneratorExit|SystemExit|KeyboardInterrupt)$',
      scopes: 'entity.type.class.exception.inherited.support'
    },
    {
      match: '^(bool|bytearray|bytes|complex|dict|float|frozenset|int|list|memoryview|object|range|set|str|tuple)$',
      scopes: 'entity.type.fundamental.inherited.support'
    }
  ]

  '''
  class_definition > argument_list > identifier,
  class_definition > argument_list > attribute > identifier:nth-child(2),
  class_definition > argument_list > keyword_argument > identifier:nth-child(2),
  class_definition > argument_list > keyword_argument > attribute > identifier:nth-child(2)
  ''': 'entity.type.class.inherited'

  'call > identifier:nth-child(0)': [
    {
      match: '^(BaseException|Exception|TypeError|StopAsyncIteration|StopIteration|ImportError|ModuleNotFoundError|OSError|ConnectionError|BrokenPipeError|ConnectionAbortedError|ConnectionRefusedError|ConnectionResetError|BlockingIOError|ChildProcessError|FileExistsError|FileNotFoundError|IsADirectoryError|NotADirectoryError|InterruptedError|PermissionError|ProcessLookupError|TimeoutError|EOFError|RuntimeError|RecursionError|NotImplementedError|NameError|UnboundLocalError|AttributeError|SyntaxError|IndentationError|TabError|LookupError|IndexError|KeyError|ValueError|UnicodeError|UnicodeEncodeError|UnicodeDecodeError|UnicodeTranslateError|AssertionError|ArithmeticError|FloatingPointError|OverflowError|ZeroDivisionError|SystemError|ReferenceError|BufferError|MemoryError|Warning|UserWarning|DeprecationWarning|PendingDeprecationWarning|SyntaxWarning|RuntimeWarning|FutureWarning|ImportWarning|UnicodeWarning|BytesWarning|ResourceWarning|GeneratorExit|SystemExit|KeyboardInterrupt)$',
      scopes: 'entity.type.class.exception.constructor.support.call'
    },
    {
      match: '^(bool|bytearray|bytes|complex|dict|float|frozenset|int|list|memoryview|object|range|set|str|tuple)$',
      scopes: 'entity.type.fundamental.cast.support.call'
    },
    {
      exact: 'super',
      scopes: 'entity.function.support.call.super'
    },
    {
      match: '^(abs|all|any|ascii|bin|breakpoint|callable|chr|classmethod|compile|delattr|dir|divmod|enumerate|eval|exec|filter|format|getattr|globals|hasattr|hash|help|hex|id|input|isinstance|issubclass|iter|len|locals|map|max|min|next|oct|open|ord|pow|print|property|repr|reversed|round|setattr|slice|sorted|staticmethod|sum|type|vars|zip|__import__)$',
      scopes: 'entity.function.support.call'
    },
    {
      match: '^[0-9_]*[A-Z]',
      scopes: 'entity.type.class.constructor.call'
    },
    'entity.function.call'
  ]

  'decorator > dotted_name > identifier': [
    {
      match: '^(classmethod|property|staticmethod)$',
      scopes: 'entity.function.decorator.support'
    },
    {
      match: '^[0-9_]*[A-Z][A-Z0-9_]*$',
      scopes: 'entity.variable.immutable'
    },
    {
      match: '^[0-9_]*[A-Z]',
      scopes: 'entity.type.class'
    },
    'entity.decorator'
  ]

  'attribute > identifier:nth-child(0)': [
    {
      match: '^[0-9_]*[A-Z][A-Z0-9_]*$',
      scopes: 'entity.variable.immutable'
    },
    {
      match: '^[0-9_]*[A-Z]',
      scopes: 'entity.type.class'
    },
    'entity.variable'
  ]

  'attribute > identifier:nth-child(2)': [
    {
      match: '^[0-9_]*[A-Z][A-Z0-9_]*$',
      scopes: 'entity.variable.immutable.member'
    },
    {
      match: '^[0-9_]*[A-Z]',
      scopes: 'entity.type.class.member'
    },
    'entity.variable.member'
  ]

  'type > attribute > identifier:nth-child(2)': 'entity.type' # _: _.Type

  'call > attribute > identifier:nth-child(2)': [
    {
      match: '^[0-9_]*[A-Z]',
      scopes: 'entity.type.class.constructor.member.call'
    },
    'entity.function.method.call'
  ]

  # String
  'string': 'string.quoted'
  'format_specifier': 'string.part.format'
  'interpolation': 'string.part.interpolation'

  # Constant
  'escape_sequence': [
    {
      match: '^\\\\[uUxftvnrab0-9]',
      scopes: 'constant.character.escape.code'
    },
    'constant.character.escape'
  ]

  'integer': 'constant.numeric'
  'float': 'constant.numeric'

  'none': 'constant.language.null'
  'true': 'constant.language.boolean'
  'false': 'constant.language.boolean'
  'ellipsis': 'constant.language.ellipsis.symbolic'

  # Comment
  'comment': 'comment.line'

  # Punctuation
  '"."': 'punctuation.accessor.member'
  '","': 'punctuation.separator'
  '";"': 'punctuation.terminator'
  '":"': 'punctuation.delimiter'
  '"("': 'punctuation.delimiter'
  '")"': 'punctuation.delimiter'
  '"{"': 'punctuation.definition'
  '"}"': 'punctuation.definition'
  '"["': 'punctuation.definition'
  '"]"': 'punctuation.definition'
  '"\\""': 'punctuation.definition.string'

  'list_splat > "*"': 'punctuation.operation.variadic.unpack'
  'list_splat_pattern > "*"': 'punctuation.operation.variadic.pack'
  'dictionary_splat > "**"': 'punctuation.operation.variadic.unpack'
  'dictionary_splat_pattern > "**"': 'punctuation.operation.variadic.pack'

  'wildcard_import > "*"': 'punctuation.definition.package.import.wildcard'
  'import_prefix > "."': 'punctuation.definition.package.import.relative'

  'decorator > "@"': 'punctuation.definition.decorator'

  '"->"': 'punctuation.delimiter.type.return'
  'typed_default_parameter > ":"': 'punctuation.delimiter.type'
  'assignment > ":"': 'punctuation.delimiter.type'
  'typed_parameter > ":"': 'punctuation.delimiter.type'

  'slice > ":"': 'punctuation.delimiter.slice'
  'pair > ":"': 'punctuation.association.pair'

  'format_specifier  > ":"': 'punctuation.delimiter.string.part.format'
  'format_expression > "{"': 'punctuation.delimiter.string.part.format'
  'format_expression > "}"': 'punctuation.delimiter.string.part.format'

  'interpolation > "{"': 'punctuation.delimiter.string.part.interpolation'
  'interpolation > "}"': 'punctuation.delimiter.string.part.interpolation'

  'dictionary > "{"': 'punctuation.definition.collection.dictionary'
  'dictionary > "}"': 'punctuation.definition.collection.dictionary'
  'dictionary_comprehension > "{"': 'punctuation.definition.collection.dictionary'
  'dictionary_comprehension > "}"': 'punctuation.definition.collection.dictionary'

  'set > "{"': 'punctuation.definition.collection.set'
  'set > "}"': 'punctuation.definition.collection.set'
  'set_comprehension > "{"': 'punctuation.definition.collection.set'
  'set_comprehension > "}"': 'punctuation.definition.collection.set'

  'list > "["': 'punctuation.definition.collection.list'
  'list > "]"': 'punctuation.definition.collection.list'
  'list_comprehension > "["': 'punctuation.definition.collection.list'
  'list_comprehension > "]"': 'punctuation.definition.collection.list'

  'subscript > "["': 'punctuation.delimiter.subscript'
  'subscript > "]"': 'punctuation.delimiter.subscript'

  'tuple > "("': 'punctuation.definition.collection.tuple'
  'tuple > ")"': 'punctuation.definition.collection.tuple'

  'future_import_statement > "("': 'punctuation.delimiter.package'
  'future_import_statement > ")"': 'punctuation.delimiter.package'
  'import_from_statement > "("': 'punctuation.delimiter.package'
  'import_from_statement > ")"': 'punctuation.delimiter.package'

  'parameters > "("': 'punctuation.delimiter.parameters'
  'parameters > ")"': 'punctuation.delimiter.parameters'

  'argument_list > "("': 'punctuation.delimiter.arguments'
  'argument_list > ")"': 'punctuation.delimiter.arguments'

  'parenthesized_expression > "("': 'punctuation.delimiter.expression'
  'parenthesized_expression > ")"': 'punctuation.delimiter.expression'
  'generator_expression > "("': 'punctuation.delimiter.expression'
  'generator_expression > ")"': 'punctuation.delimiter.expression'

  'ERROR > "."': 'punctuation.accessor.member.invalid.illegal'
  'ERROR > ","': 'punctuation.separator.invalid.illegal'
  'ERROR > ";"': 'punctuation.terminator.invalid.illegal'
  'ERROR > "->"': 'punctuation.delimiter.type.return.invalid.illegal'
  'ERROR > ":"': 'punctuation.delimiter.invalid.illegal'
  'ERROR > "("': 'punctuation.delimiter.invalid.illegal'
  'ERROR > ")"': 'punctuation.delimiter.invalid.illegal'
  'ERROR > "{"': 'punctuation.definition.invalid.illegal'
  'ERROR > "}"': 'punctuation.definition.invalid.illegal'
  'ERROR > "["': 'punctuation.definition.invalid.illegal'
  'ERROR > "]"': 'punctuation.definition.invalid.illegal'
  'ERROR > "\\""': 'punctuation.definition.string.invalid.illegal'
